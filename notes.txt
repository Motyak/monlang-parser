Pour lancer les tests LV1 depuis monlang/ en utilisant la nouvelle version de montree/ :
1) renommer monlang/lib/montree en montree.bak
2) ln -s ../../monlang-parser/montree montree
3) make dist
4) make test # le montree va se repackage car nouvelle version des headers "monlang-LV1" (dist)

---

Pour ajouter une nouvelle entité LV2:
prendre exemple sur..
https://github.com/Motyak/monlang-parser/commit/2305f3a5b2765ab206087f8e2f3871877ade159d

---

Pour rajouter une Rvalue dans LV2:
- Ecrire test dans expr.cpp
- Ajouter .h dans include/, .cpp dans src/ (si nécessaire)
- Ajouter peekXXX et buildXXX + include XXX dans Expression.cpp
- Ajouter le variant dans Expression.h
- Ajouter dans Makefile la translation unit
- Ajouter XXX dans LV1AstBuilder.cpp
- Ajouter include XXX + function overload pour XXX dans .h et .cpp de PrintLV2.cpp dans montree/

---

Faire une lib 'metalang' qui sera utilisée dans le main de monlang-LV2,
une manière de formuler un pattern de phrase/mot LV1,
pour faire: `if <phrase|mot> =~ <pattern> {...}`

Elle dépendra de monlang-LV1/ast (pas de Ast_) et une définition de
get_operators() qui retourne un std::vector<std::string> pour "OPERATOR"
(y'aura une implémentation par défaut avec les opérateurs binaires classiques de C++:
arithmetic , logical et comparison)
